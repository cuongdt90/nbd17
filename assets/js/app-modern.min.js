/* nbdesignerjs
 * @author  netbaseteam
 * @link https://cmsmart.net
 * @version 1.9.0
 * @created Jun 2016
 * @modified 23, MAy 2018
 * */
var nbdApp = angular.module('nbd-app', ["angularSpectrumColorpicker"]);
nbdApp.controller('designCtrl', ['$scope', function($scope){
    $scope.stages = [
        {canvas: {}}
    ];
    $scope.colorBackground = '#169ddf';
    $scope.changeBackgroundColor = function(color){
        console.log(color);
    };
    $scope.initSettings = function(){
        angular.copy(NBDESIGNCONFIG, $scope.settings);
        $scope.__colorPalette = __colorPalette;
    }
    $scope.settings = {};
    $scope.init = function() {
        $scope.initSettings();

    };
    $scope.$on('nbd:keypress', function(event, e){
        $scope.keypressHandle(e);
    });
    $scope.keypressHandle = function(e){
        if((e.ctrlKey || e.metaKey)) {
            e.preventDefault();
            console.log(e.which);

        }
    };
    $scope.$on('nbd:contextmenu', function(event, e){
        $scope.contextMenu(e);
    });
    $scope.ctxMenuStyle = {
        'top': '17%',
        'left': '33%',
        'display': 'none'
    };
    $scope.contextMenu = function(e){
        e.preventDefault();
        var posX = e.pageX,
            posY = e.pageY;
        $scope.ctxMenuStyle.top = posY;
        $scope.ctxMenuStyle.left = posX;
        $scope.ctxMenuStyle.display = 'block';
        if ($scope.$root.$$phase !== "$apply" && $scope.$root.$$phase !== "$digest") $scope.$apply()
    };
    $scope.$on('canvas:created', function(event, id){
        $scope.initStageSetting( id );
        $scope.stages[id].canvas.on('mouse:down', function(options) {
            $scope.onMouseDown(id, options);
        });
        $scope.stages[id].canvas.on('object:selected', function(options) {
            $scope.onObjectSelected(id, options);
        });

    });
    $scope.initStageSetting = function(){
        //todo something
    };
    $scope.addStage = function(){
        $scope.stages.push({canvas: {}});
    };
    $scope.onMouseDown = function(id, options){
        $scope.currentStage = id;
    };
    $scope.onObjectSelected = function(id, options){
        var object = options.target;
        if (object.type === "text") {
            console.log(object.get('text'));
        }
    };
    /* Design tools */
    $scope.currentStage = 1;
    $scope.defaultText = 'Text';
    $scope.debug = function(){
        //$scope.currentStage = Math.floor(Math.random() * $scope.stages.length);
        //$scope.addText();
        $scope.ctxMenuStyle.display = 'block';
        console.log($scope.ctxMenuStyle);
    };
    $scope.addText = function(){
        $scope.stages[$scope.currentStage]['canvas'].add(new FabricWindow.Text($scope.defaultText, {
            left: 100,
            top: 10,
            fontFamily: "Arial",
            radius: 50,
            fontSize: 30,
            textAlign: "center",
            noScaleCache: false,
            spacing: 0
        }));
    };

    $scope.init();
}]);
nbdApp.factory('FabricWindow', ['$window', function($window) {
    return $window.fabric;
}]);
nbdApp.directive('nbdCanvas', ['FabricWindow', '$timeout', '$rootScope', function(FabricWindow, $timeout, $rootScope){
    return {
        restrict: "AE",
        scope: {
            stage: '=stage',
            index: '@'
        },
        link: function( scope, element, attrs ) {
            $timeout(function() {
                scope.stage.canvas = new FabricWindow.Canvas('nbd-stage-'+scope.index);
                scope.$emit('canvas:created', scope.index);
                element.parent().children().on("contextmenu", function(e){
                    e.preventDefault();
                    scope.$emit('nbd:contextmenu', e);
                });
            });
        }
    }
}]);
nbdApp.directive('keypress', ['$window', function($window){
    return {
        restrict: "AE",
        link: function( scope, element, attrs ) {
            $window.document.addEventListener("keydown", function(e){
                scope.$emit('nbd:keypress', e);
            }, false);
        }
    }
}]);
